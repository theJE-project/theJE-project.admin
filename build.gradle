plugins {
	id 'java'
	id 'war' // JSP를 위한 war 빌드
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.threeteam'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

bootJar {
    enabled = false
}
bootWar {
    enabled = true
}
repositories {
	mavenCentral()
}

dependencies {
    // Spring Web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // JSP support
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'

    // JSTL (최신보단 안정적인 1.2 버전 사용)
    implementation 'jakarta.servlet:jakarta.servlet-api'
	implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api'
	implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl' 

	// thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    
    // MyBatis
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'

    // MySQL
    runtimeOnly 'com.mysql:mysql-connector-j'

    // JSON
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // DevTools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // 메일보내기
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // 보안
    implementation 'org.springframework.boot:spring-boot-starter-security'

}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters'
}


