<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.threeteam.sns.mapper.CommunitiesMapper">

    <select id="getAll" resultType="com.threeteam.sns.dto.CommunitiesDto">
        SELECT c.*
        ,(
            SELECT COUNT(*)
            FROM likes l
            WHERE l.board = c.id
            AND l.board_types = 1
        ) AS likesCount
        ,(
            SELECT COUNT(*)
            FROM likes l
            WHERE l.board = c.id
            AND l.board_types = 1
            AND l.users = #{users}
        ) AS likesed
        ,(
            SELECT id
            FROM likes l
            WHERE l.board = c.id
            AND l.board_types = 1
            AND l.users = #{users}
        ) AS likesId
        ,(
        	SELECT COUNT(*) > 0
        	FROM followers
        	WHERE follower = #{users} 
        	AND followee = c.users
        ) AS isFollowing
        FROM communities c
        <where>
            <if test="category != null">
                c.categories = #{category}
            </if>

            <!--  공개 여부-->
            <if test="isVisible != null and isVisible">
                AND c.is_visible = true
            </if>
            AND c.is_delete=false
        </where>
        ORDER BY c.created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="getById" parameterType="int" resultType="com.threeteam.sns.dto.CommunitiesDto">
		SELECT c.*
        ,(
	        SELECT COUNT(*)
	        FROM likes l
	        WHERE l.board = c.id
	        AND l.board_types = 1
        ) AS likesCount
        ,(
	        SELECT COUNT(*)
	        FROM likes l
	        WHERE l.board = c.id
	        AND l.board_types = 1
	        AND l.users = #{users}
        ) AS likesed
        ,(
	        SELECT id
	        FROM likes l
	        WHERE l.board = c.id
	        AND l.board_types = 1
	        AND l.users = #{users}
        ) AS likesId
        ,(
            SELECT COUNT(*) > 0
            FROM followers
            WHERE follower = #{users}
            AND followee = c.users
        ) AS isFollowing
        FROM communities c
        WHERE `id` = #{id}
        AND is_delete = false
	</select>
    <select id="getByDto" parameterType="com.threeteam.sns.dto.CommunitiesDto" resultType="com.threeteam.sns.dto.CommunitiesDto">
		SELECT c.*
        ,(
	        SELECT COUNT(*)
	        FROM likes l
	        WHERE l.board = c.id
	        AND l.board_types = 1
        ) AS likesCount
        ,(
	        SELECT COUNT(*)
	        FROM likes l
	        WHERE l.board = c.id
	        AND l.board_types = 1
	        AND l.users = #{users}
        ) AS likesed
        ,(
	        SELECT id
	        FROM likes l
	        WHERE l.board = c.id
	        AND l.board_types = 1
	        AND l.users = #{users}
        ) AS likesId
        ,(
            SELECT COUNT(*) > 0
            FROM followers
            WHERE follower = #{users}
            AND followee = c.users
        ) AS isFollowing
        FROM communities c
        WHERE `id` = #{id}
        AND is_delete = false
	</select>

	<select id="getByUser" parameterType="map" resultType="com.threeteam.sns.dto.CommunitiesDto">
        SELECT * FROM communities
        WHERE categories = #{category}
        AND users = #{user}
        AND is_delete = false
        ORDER BY id DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="getByFollowees" parameterType="map" resultType="com.threeteam.sns.dto.CommunitiesDto">
        SELECT *
        FROM communities
        WHERE users IN
        <foreach item="userId" collection="followee" open="(" separator="," close=")">
            #{userId}
        </foreach>
        AND categories = #{category}
        AND is_delete = false
        ORDER BY created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <insert id="insert" parameterType="com.threeteam.sns.dto.CommunitiesDto">
        <selectKey keyProperty="id" order="AFTER" resultType="int">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO communities (
            created_at,
            users,
            categories,
            title,
            content,
            count,
            hash,
            updated_at,
            is_delete,
            is_visible
        ) VALUES (
            NOW(),
            #{users},
            #{categories},
            #{title},
            #{content},
            #{count},
            #{hash},
            #{updated_at},
            #{is_delete},
            #{is_visible}
        )
    </insert>

    <update id="update" parameterType="com.threeteam.sns.dto.CommunitiesDto">
        UPDATE communities SET updated_at = NOW()
        <if test="users != null">, `users` = #{users}</if>
        <if test="categories != null">, `categories` = #{categories}</if>
        <if test="title != null">, `title` = #{title}</if>
        <if test="content != null">, `content` = #{content}</if>
        <if test="count != null">, `count` = #{count}</if>
        <if test="hash != null">, `hash` = #{hash}</if>
        <if test="is_delete != null">, `is_delete` = #{is_delete}</if>
        <if test="is_visible != null">, `is_visible` = #{is_visible}</if>
         WHERE `id` = #{id}
    </update>

    <update id="updateView" parameterType="int">
        update communities SET count = count+1 WHERE id = #{id}
    </update>

<!--  게시글 삭제  -->
    <update id="isDelete" parameterType="int">
        update communities SET is_delete = true WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="int">
		DELETE FROM communities WHERE `id` = #{id}
	</delete>

    <select id="search" parameterType="com.threeteam.sns.dto.CommunitiesDto" resultType="com.threeteam.sns.dto.CommunitiesDto">
        SELECT * FROM communities WHERE 1=1
        <if test="id != null">AND `id` = #{id}</if>
        <if test="users != null">AND `users` = #{users}</if>
        <if test="categories != null">AND `categories` = #{categories}</if>
        <if test="title != null">AND `title` = #{title}</if>
        <if test="content != null">AND `content` = #{content}</if>
        <if test="count != null">AND `count` = #{count}</if>
        <if test="hash != null">AND `hash` LIKE CONCAT('%',  #{hash}, '%')</if>
        <if test="is_delete != null">AND `is_delete` = #{is_delete}</if>
        <if test="is_visible != null">AND `is_visible` = #{is_visible}</if>
    </select>

    <select id="searchList" parameterType="com.threeteam.sns.dto.CommunitiesDto" resultType="map">
        SELECT
        	c.*,
        	u.`account`, u.`name`, u.`img`,
        	<if test="follower != null">
        	EXISTS (
	            SELECT 1
	            FROM followers f
	            WHERE f.follower = #{follower}
	            AND f.followee = u.id
	        ) AS is_following
	        </if>
	        <if test="follower == null">
	        false AS is_following
	        </if>
            ,(
                SELECT COUNT(*)
                FROM likes l
                WHERE l.board = c.id
                AND l.board_types = 1
            ) AS likesCount
            ,(
                SELECT COUNT(*)
                FROM likes l
                WHERE l.board = c.id
                AND l.board_types = 1
                AND l.users = #{users}
            ) AS likesed
            ,(
                SELECT id
                FROM likes l
                WHERE l.board = c.id
                AND l.board_types = 1
                AND l.users = #{users}
            ) AS likesId
           ,(
                SELECT COUNT(*) > 0
                FROM followers
                WHERE follower = #{users}
                AND followee = c.users
            ) AS isFollowing
        FROM communities c
        INNER JOIN users u ON u.`id` = c.`users`
        <where>
	        <trim prefix="(" suffix=")" prefixOverrides="OR">
	            <if test="id != null">OR c.`id` = #{id}</if>
		        <if test="users != null">OR c.`users` = #{users}</if>
		        <if test="title != null">OR c.`title` LIKE CONCAT('%',  #{title}, '%')</if>
		        <if test="content != null">OR c.`content` LIKE CONCAT('%',  #{content}, '%')</if>
		        <if test="hash != null">OR c.`hash` LIKE CONCAT('%',  #{hash}, '%')</if>
	        </trim>
            <if test="categories != null">AND c.`categories` = #{categories}</if>
	    </where>
    </select>

    <select id="selectByUserId" parameterType="string" resultType="com.threeteam.sns.dto.CommunitiesDto">
        SELECT * FROM communities WHERE users = #{userId}
    </select>

</mapper>
